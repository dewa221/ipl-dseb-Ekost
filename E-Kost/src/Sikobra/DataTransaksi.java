/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sikobra;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hary Permana
 */
public class DataTransaksi extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form DataTransaksi
     */
    public DataTransaksi() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Data Transaksi");
        String[] judul = {"ID Transaksi", "ID Customer", "Nama", "ID Kamar", "No Kamar", "Tanggal Masuk", "Tanggal Keluar", "Total Pembayaran"};
        model = new DefaultTableModel(judul, 0);
        tabelTrx.setModel(model);
        Show();
    }

    public void Show() {
        int row = tabelTrx.getRowCount();
        for (int a = 0; a < row; a++) {
            model.removeRow(0);
        }
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sikobra", "root", "");
            ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM data_transaksii");
            while (rs.next()) {
                String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)};
                model.addRow(data);
            }
        } catch (SQLException e) {
            Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public void Reset() {
        id_Transaksi.setText("");
        id_Customer.setText("");
        nama.setText("");
        id_Kamar.setText("");
        no_Kamar.setText("");
        tgl_Masuk.setDate(null);
        tgl_Keluar.setDate(null);
        total_Pembayaran.setText("");
    }

    public static Date getTanggalFromTable(JTable table, int kolom) {
        JTable tabelTrx = table;

        String tanggalMasuk = String.valueOf(tabelTrx.getValueAt(tabelTrx.getSelectedRow(), kolom));
        String tanggalKeluar = String.valueOf(tabelTrx.getValueAt(tabelTrx.getSelectedRow(), kolom));
        Date tanggal = null;
        try {
            tanggal = new SimpleDateFormat("yyyy-MM-dd").parse(tanggalMasuk);
            tanggal = new SimpleDateFormat("yyyy-MM-dd").parse(tanggalKeluar);
        } catch (ParseException ex) {
            Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tanggal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTrx = new javax.swing.JTable();
        id_Transaksi = new javax.swing.JTextField();
        id_Customer = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        id_Kamar = new javax.swing.JTextField();
        no_Kamar = new javax.swing.JTextField();
        tgl_Masuk = new com.toedter.calendar.JDateChooser();
        tgl_Keluar = new com.toedter.calendar.JDateChooser();
        total_Pembayaran = new javax.swing.JTextField();
        background = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelTrx.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tabelTrx.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tabelTrx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelTrxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelTrx);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 900, 150));

        id_Transaksi.setBackground(new java.awt.Color(222, 220, 225));
        id_Transaksi.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        id_Transaksi.setForeground(new java.awt.Color(82, 113, 141));
        id_Transaksi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        id_Transaksi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                id_TransaksiKeyTyped(evt);
            }
        });
        getContentPane().add(id_Transaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 98, 327, 32));

        id_Customer.setBackground(new java.awt.Color(222, 220, 225));
        id_Customer.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        id_Customer.setForeground(new java.awt.Color(82, 113, 141));
        id_Customer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        id_Customer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                id_CustomerKeyTyped(evt);
            }
        });
        getContentPane().add(id_Customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 144, 327, 31));

        nama.setBackground(new java.awt.Color(222, 220, 225));
        nama.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        nama.setForeground(new java.awt.Color(82, 113, 141));
        nama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });
        nama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                namaKeyTyped(evt);
            }
        });
        getContentPane().add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 187, 327, 32));

        id_Kamar.setBackground(new java.awt.Color(222, 220, 225));
        id_Kamar.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        id_Kamar.setForeground(new java.awt.Color(82, 113, 141));
        id_Kamar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        id_Kamar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                id_KamarKeyTyped(evt);
            }
        });
        getContentPane().add(id_Kamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 231, 327, 32));

        no_Kamar.setBackground(new java.awt.Color(222, 220, 225));
        no_Kamar.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        no_Kamar.setForeground(new java.awt.Color(82, 113, 141));
        no_Kamar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        no_Kamar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                no_KamarKeyTyped(evt);
            }
        });
        getContentPane().add(no_Kamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 280, 327, 32));

        tgl_Masuk.setBackground(new java.awt.Color(222, 220, 225));
        tgl_Masuk.setForeground(new java.awt.Color(82, 113, 141));
        getContentPane().add(tgl_Masuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 100, 280, 40));

        tgl_Keluar.setBackground(new java.awt.Color(222, 220, 225));
        tgl_Keluar.setForeground(new java.awt.Color(82, 113, 141));
        getContentPane().add(tgl_Keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 163, 280, 40));

        total_Pembayaran.setBackground(new java.awt.Color(222, 220, 225));
        total_Pembayaran.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        total_Pembayaran.setForeground(new java.awt.Color(82, 113, 141));
        total_Pembayaran.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        total_Pembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_PembayaranActionPerformed(evt);
            }
        });
        getContentPane().add(total_Pembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(959, 232, 270, 32));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Data transaksi new.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 230, 50));

        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 327, 230, 50));

        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 328, 230, 50));

        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 328, 230, 50));

        btnHome.setText("jButton1");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 10, -1, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggalMasuk = String.valueOf(sdf.format(tgl_Masuk.getDate()));
        String tanggalKeluar = String.valueOf(sdf.format(tgl_Keluar.getDate()));

        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sikobra", "root", "");
            String SQL = "INSERT INTO data_transaksii VALUES (?,?,?,?,?,?,?,?)";
            PreparedStatement prprdStm = conn.prepareStatement(SQL);
            prprdStm.setString(1, id_Transaksi.getText());
            prprdStm.setString(2, id_Customer.getText());
            prprdStm.setString(3, nama.getText());
            prprdStm.setString(4, id_Kamar.getText());
            prprdStm.setString(5, no_Kamar.getText());
            prprdStm.setString(6, tanggalMasuk);
            prprdStm.setString(7, tanggalKeluar);
            prprdStm.setString(8, total_Pembayaran.getText());
            prprdStm.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan!");
            Show();
            Reset();
        } catch (SQLException e) {
            Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("SQLException: " + e.getMessage());
            
        }


    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggalMasuk = String.valueOf(sdf.format(tgl_Masuk.getDate()));
        String tanggalKeluar = String.valueOf(sdf.format(tgl_Keluar.getDate()));

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sikobra", "root", "");
            conn.createStatement().executeUpdate("update data_transaksii set ID_Customer = '" + id_Customer.getText() + "',Nama = '" + nama.getText() + "',ID_Kamar = '" + id_Kamar.getText() + "',No_Kamar = '" + no_Kamar.getText() + "',Tgl_Masuk = '" + tanggalMasuk + "',Tgl_Keluar = '" + tanggalKeluar + "',Total_Pembayaran = '" + total_Pembayaran.getText() +"' where ID_Transaksi ='" + id_Transaksi.getText() + "' ");
            
            JOptionPane.showMessageDialog(null, "Data berhasil dirubah!");
            Show();
            Reset();
        } catch (SQLException e) {
            Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("SQLException: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(null, "Apakah anda benar ingin menghapus data ini?", "Delete", JOptionPane.YES_NO_OPTION);
        if (i == 0) {
            try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sikobra", "root", "");
                conn.createStatement().executeUpdate("DELETE from data_transaksii where ID_Transaksi ='" + id_Transaksi.getText() + "'");
                
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                Show();
                Reset();
            } catch (SQLException ex) {
                Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("SQLException: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        new MainMenu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void total_PembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_PembayaranActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_total_PembayaranActionPerformed

    private void tabelTrxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelTrxMouseClicked
        // TODO add your handling code here:
        int c = tabelTrx.getSelectedRow();

        if (c > -1) {
            id_Transaksi.setText(model.getValueAt(c, 0).toString());
            id_Customer.setText(model.getValueAt(c, 1).toString());
            nama.setText(model.getValueAt(c, 2).toString());
            id_Kamar.setText(model.getValueAt(c, 3).toString());
            no_Kamar.setText(model.getValueAt(c, 4).toString());
            tgl_Masuk.setDate(getTanggalFromTable(tabelTrx, 5));
            tgl_Keluar.setDate(getTanggalFromTable(tabelTrx, 6));
            total_Pembayaran.setText(model.getValueAt(c, 7).toString());
            
        }
    }//GEN-LAST:event_tabelTrxMouseClicked

    private void id_TransaksiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_id_TransaksiKeyTyped
        // TODO add your handling code here:
        if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Inputan hanya bisa diisi angka", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_id_TransaksiKeyTyped

    private void namaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaKeyTyped
        // TODO add your handling code here:
    
    }//GEN-LAST:event_namaKeyTyped

    private void id_KamarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_id_KamarKeyTyped
        // TODO add your handling code here:
        if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Inputan hanya bisa diisi angka", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_id_KamarKeyTyped

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void id_CustomerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_id_CustomerKeyTyped
        // TODO add your handling code here:
          if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Inputan hanya bisa diisi angka", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_id_CustomerKeyTyped

    private void no_KamarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_no_KamarKeyTyped
        // TODO add your handling code here:
          if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Inputan hanya bisa diisi angka", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_no_KamarKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JTextField id_Customer;
    private javax.swing.JTextField id_Kamar;
    private javax.swing.JTextField id_Transaksi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField no_Kamar;
    private javax.swing.JTable tabelTrx;
    private com.toedter.calendar.JDateChooser tgl_Keluar;
    private com.toedter.calendar.JDateChooser tgl_Masuk;
    private javax.swing.JTextField total_Pembayaran;
    // End of variables declaration//GEN-END:variables
}
